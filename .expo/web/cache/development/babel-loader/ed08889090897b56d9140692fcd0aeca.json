{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from 'react';\nimport Logo from \"../assets/logo.png\";\nimport User from \"../assets/user.png\";\nimport Password from \"../assets/password.png\";\nimport { createUserWithEmailAndPassword, getRedirectResult, GithubAuthProvider, GoogleAuthProvider, signInWithEmailAndPassword, signInWithRedirect, signOut } from \"firebase/auth\";\nimport { authService } from \"../firebase_config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var onChangeInput = function onChangeInput(event) {\n    setUserName(event);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsx(Image, {\n        source: User,\n        style: styles.userIcon\n      }), _jsx(Image, {\n        source: Password,\n        style: styles.passwordIcon\n      })]\n    }), _jsx(Image, {\n      source: Logo,\n      style: styles.appLogo\n    }), _jsx(Text, {\n      style: styles.loginText,\n      children: \"please sign in to continue\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: 'User name',\n      maxLength: 15,\n      value: userName,\n      onChangeText: onChangeInput\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: 'Password',\n      maxLength: 15\n    }), _jsx(Button, {\n      title: \"LOGIN\",\n      color: \"#6C4BC7\",\n      onPress: function onPress() {\n        props.navigation.navigate(\"Home\", {\n          userNameText: userName\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        props.navigation.navigate(\"SignUp\");\n      },\n      children: _jsx(Text, {\n        style: styles.signUp,\n        children: \"Sign Up\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  appLogo: {\n    width: 140,\n    height: 140,\n    marginBottom: 40\n  },\n  loginText: {\n    fontSize: 18,\n    marginBottom: 20,\n    color: '#595959'\n  },\n  input: {\n    width: '70%',\n    height: 45,\n    borderColor: '#848484',\n    borderWidth: 1,\n    marginBottom: 15,\n    paddingLeft: 50\n  },\n  signUp: {\n    fontSize: 20,\n    color: '#595959',\n    textDecorationLine: 'underline',\n    marginTop: 130\n  },\n  userIcon: {\n    width: 20,\n    height: 23,\n    bottom: -280,\n    left: -120\n  },\n  passwordIcon: {\n    width: 20,\n    height: 21,\n    bottom: -320,\n    left: -120\n  }\n});","map":{"version":3,"names":["useState","Logo","User","Password","createUserWithEmailAndPassword","getRedirectResult","GithubAuthProvider","GoogleAuthProvider","signInWithEmailAndPassword","signInWithRedirect","signOut","authService","LoginScreen","props","userName","setUserName","onChangeInput","event","styles","container","userIcon","passwordIcon","appLogo","loginText","input","navigation","navigate","userNameText","signUp","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","fontSize","color","borderColor","borderWidth","paddingLeft","textDecorationLine","marginTop","bottom","left"],"sources":["C:/Users/User/Desktop/AppSW-Weonji/AppSW-Weonji/TProject/Screens/Login.js"],"sourcesContent":["import { View, Text, Button, StyleSheet, Image, TextInput, TouchableOpacity } from 'react-native';\nimport { useState} from 'react'\nimport Logo from '../assets/logo.png'\nimport User from '../assets/user.png'\nimport Password from '../assets/password.png'\nimport {\n    createUserWithEmailAndPassword,\n    getRedirectResult,\n    GithubAuthProvider,\n    GoogleAuthProvider,\n    signInWithEmailAndPassword,\n    signInWithRedirect,\n    signOut,\n  } from \"firebase/auth\";\n  import { authService } from \"../firebase_config\";\n\n\nexport default function LoginScreen(props) {\n    const [userName,setUserName] = useState(\"\")\n\n    const onChangeInput = (event) =>{\n        setUserName(event)\n    }\n    return (\n        <View style={styles.container}>\n            <View>\n                <Image \n                    source={User}\n                    style={styles.userIcon}\n                />\n                <Image \n                    source={Password}\n                    style={styles.passwordIcon}\n                />\n            </View>\n            <Image\n                source={Logo}\n                style={styles.appLogo}\n            />\n            <Text style={styles.loginText}>please sign in to continue</Text>\n            \n            <TextInput \n                style={styles.input}\n                placeholder={'User name'}\n                maxLength={15}\n                value={userName}\n                onChangeText={onChangeInput}\n            />\n            <TextInput \n                style={styles.input}\n                placeholder={'Password'}\n                maxLength={15}\n            />\n            \n            <Button \n                title='LOGIN'\n                color=\"#6C4BC7\"\n                onPress={()=>{props.navigation.navigate(\"Home\",{userNameText:userName})}}\n            />\n\n            <TouchableOpacity onPress={()=> {props.navigation.navigate(\"SignUp\")}}>\n                <Text style={styles.signUp}>Sign Up</Text>\n            </TouchableOpacity>\n        </View>\n    \n    );\n  }\n  const styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width:'100%'\n      },\n    appLogo: {\n        width:140,\n        height:140, \n        marginBottom:40,\n      },\n    loginText: {\n        fontSize: 18,\n        marginBottom:20,\n        color:'#595959'\n    },\n    input: {\n        width:'70%',\n        height:45,\n        borderColor:'#848484',\n        borderWidth:1,\n        marginBottom:15,\n        paddingLeft:50,\n    },\n    signUp: {\n        fontSize: 20,\n        color:'#595959',\n        textDecorationLine:'underline',\n        marginTop:130\n    },\n    userIcon: {\n        width:20,\n        height:23,\n        bottom:-280,\n        left:-120,\n    },\n    passwordIcon: {\n        width:20,\n        height:21,\n        bottom:-320,\n        left:-120,\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}