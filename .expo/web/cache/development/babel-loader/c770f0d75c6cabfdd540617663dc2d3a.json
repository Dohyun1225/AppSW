{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from 'react';\nimport Logo from \"../assets/logo.png\";\nimport User from \"../assets/user.png\";\nimport Password from \"../assets/password.png\";\nimport SignUp from \"./SignUp\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function LoginScreen(props) {\n  var _users;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var onChangeInput = function onChangeInput(event) {\n    setUserName(event);\n  };\n  var readfromDB = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = yield getDocs(collection(db, \"user\"));\n        setUsers(data.docs.map(function (doc) {\n          return _objectSpread(_objectSpread({}, doc.data()), {}, {\n            id: doc.id\n          });\n        }));\n      } catch (error) {\n        console.log(error.message);\n      }\n    });\n    return function readfromDB() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsx(Image, {\n        source: User,\n        style: styles.userIcon\n      }), _jsx(Image, {\n        source: Password,\n        style: styles.passwordIcon\n      })]\n    }), _jsx(Image, {\n      source: Logo,\n      style: styles.appLogo\n    }), _jsx(Text, {\n      style: styles.loginText,\n      children: \"please sign in to continue\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: 'User name',\n      maxLength: 15,\n      value: userName,\n      onChangeText: onChangeInput\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: 'Password',\n      maxLength: 15\n    }), _jsx(Button, {\n      title: \"LOGIN\",\n      color: \"#6C4BC7\",\n      onPress: function onPress() {\n        props.navigation.navigate(\"Home\", {\n          userNameText: userName\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        props.navigation.navigate(\"SignUp\");\n      },\n      children: _jsx(Text, {\n        style: styles.signUp,\n        children: \"Sign Up\"\n      })\n    }), _jsx(Button, {\n      title: \"Read Text\",\n      onPress: readfromDB\n    }), (_users = users) == null ? void 0 : _users.map(function (row, idx) {\n      return _jsxs(_Fragment, {\n        children: [_jsxs(Text, {\n          children: [\"User- \", idx]\n        }), _jsx(Text, {\n          children: row.id\n        }), _jsx(Text, {\n          children: row.addName\n        }), _jsx(Text, {\n          children: row.addAge\n        })]\n      });\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  appLogo: {\n    width: 140,\n    height: 140,\n    marginBottom: 40\n  },\n  loginText: {\n    fontSize: 18,\n    marginBottom: 20,\n    color: '#595959'\n  },\n  input: {\n    width: '70%',\n    height: 45,\n    borderColor: '#848484',\n    borderWidth: 1,\n    marginBottom: 15,\n    paddingLeft: 50\n  },\n  signUp: {\n    fontSize: 20,\n    color: '#595959',\n    textDecorationLine: 'underline',\n    marginTop: 130\n  },\n  userIcon: {\n    width: 20,\n    height: 23,\n    bottom: -280,\n    left: -120\n  },\n  passwordIcon: {\n    width: 20,\n    height: 21,\n    bottom: -320,\n    left: -120\n  }\n});","map":{"version":3,"names":["useState","Logo","User","Password","SignUp","LoginScreen","props","userName","setUserName","onChangeInput","event","readfromDB","data","getDocs","collection","db","setUsers","docs","map","doc","id","error","console","log","message","styles","container","userIcon","passwordIcon","appLogo","loginText","input","navigation","navigate","userNameText","signUp","users","row","idx","addName","addAge","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","marginBottom","fontSize","color","borderColor","borderWidth","paddingLeft","textDecorationLine","marginTop","bottom","left"],"sources":["C:/Users/User/Desktop/AppSW-Weonji/AppSW-Weonji/TProject/Screens/Login.js"],"sourcesContent":["import { View, Text, Button, StyleSheet, Image, TextInput, TouchableOpacity } from 'react-native';\nimport { useState} from 'react'\nimport Logo from '../assets/logo.png'\nimport User from '../assets/user.png'\nimport Password from '../assets/password.png'\nimport SignUp from './SignUp'\n\n\nexport default function LoginScreen(props) {\n    const [userName,setUserName] = useState(\"\")\n\n    const onChangeInput = (event) =>{\n        setUserName(event)\n    }\n\n    const readfromDB = async () =>{\n        try{\n            const data = await getDocs(collection(db, \"user\"))\n            setUsers(data.docs.map(doc => ({ ...doc.data(), id: doc.id })))\n        }catch(error){\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <View>\n                <Image \n                    source={User}\n                    style={styles.userIcon}\n                />\n                <Image \n                    source={Password}\n                    style={styles.passwordIcon}\n                />\n            </View>\n            <Image\n                source={Logo}\n                style={styles.appLogo}\n            />\n            <Text style={styles.loginText}>please sign in to continue</Text>\n            \n            <TextInput \n                style={styles.input}\n                placeholder={'User name'}\n                maxLength={15}\n                value={userName}\n                onChangeText={onChangeInput}\n            />\n            <TextInput \n                style={styles.input}\n                placeholder={'Password'}\n                maxLength={15}\n            />\n            \n            <Button \n                title='LOGIN'\n                color=\"#6C4BC7\"\n                onPress={()=>{props.navigation.navigate(\"Home\",{userNameText:userName})}}\n            />\n\n            <TouchableOpacity onPress={()=> {props.navigation.navigate(\"SignUp\")}}>\n                <Text style={styles.signUp}>Sign Up</Text>\n            </TouchableOpacity>\n            <Button title=\"Read Text\" onPress={readfromDB}/>\n            {users?.map((row, idx) =>{\n            return(\n                <>\n                    <Text>User- {idx}</Text>\n                    <Text>{row.id}</Text>\n                    <Text>{row.addName}</Text>\n                    <Text>{row.addAge}</Text>\n                </>\n            )\n         })}\n            \n        </View>\n    \n    );\n  }\n  const styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width:'100%'\n      },\n    appLogo: {\n        width:140,\n        height:140, \n        marginBottom:40,\n      },\n    loginText: {\n        fontSize: 18,\n        marginBottom:20,\n        color:'#595959'\n    },\n    input: {\n        width:'70%',\n        height:45,\n        borderColor:'#848484',\n        borderWidth:1,\n        marginBottom:15,\n        paddingLeft:50,\n    },\n    signUp: {\n        fontSize: 20,\n        color:'#595959',\n        textDecorationLine:'underline',\n        marginTop:130\n    },\n    userIcon: {\n        width:20,\n        height:23,\n        bottom:-280,\n        left:-120,\n    },\n    passwordIcon: {\n        width:20,\n        height:21,\n        bottom:-320,\n        left:-120,\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}